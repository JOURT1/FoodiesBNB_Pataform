{"ast":null,"code":"export class EmailValidators {\n  static realEmailDomain(control) {\n    if (!control.value) {\n      return null;\n    }\n    const email = control.value.toLowerCase();\n    // Lista de dominios de email válidos y populares\n    const validDomains = ['gmail.com', 'yahoo.com', 'outlook.com', 'hotmail.com', 'live.com', 'msn.com', 'icloud.com', 'me.com', 'mac.com', 'aol.com', 'protonmail.com', 'zoho.com', 'yandex.com', 'mail.com', 'gmx.com', 'tutanota.com', 'fastmail.com', 'runbox.com', 'mailbox.org', 'disroot.org',\n    // Dominios empresariales comunes\n    'company.com', 'corp.com', 'org.com', 'edu', 'gov',\n    // Dominios españoles\n    'telefonica.net', 'terra.es', 'ya.com', 'ono.com', 'jazztel.es', 'orange.es'];\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      return {\n        invalidEmail: true\n      };\n    }\n    const domain = email.split('@')[1];\n    // Verificar si el dominio está en la lista de dominios válidos\n    const isDomainValid = validDomains.some(validDomain => domain === validDomain || domain.endsWith('.' + validDomain));\n    // También permitir dominios que terminen en extensiones comunes\n    const commonExtensions = ['.com', '.org', '.net', '.edu', '.gov', '.es', '.mx', '.co', '.io'];\n    const hasValidExtension = commonExtensions.some(ext => domain.endsWith(ext));\n    if (!isDomainValid && !hasValidExtension) {\n      return {\n        invalidEmailDomain: true\n      };\n    }\n    // Verificar que no sea un dominio temporal o desechable conocido\n    const temporaryDomains = ['10minutemail.com', 'tempmail.org', 'guerrillamail.com', 'mailinator.com', 'throwaway.email', 'temp-mail.org'];\n    const isTemporary = temporaryDomains.includes(domain);\n    if (isTemporary) {\n      return {\n        temporaryEmail: true\n      };\n    }\n    return null;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}